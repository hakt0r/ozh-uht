// Generated by CoffeeScript 1.7.1
(function() {
  var next, run, urac;

  urac = {
    counter: 0,
    width: 320,
    height: 240,
    init: function() {
      urac.container = document.getElementById("videos-container");
      urac.start = document.querySelector("#play");
      urac.stop = document.querySelector("#stop");
      urac.start.disabled = false;
      navigator.getUserMedia({
        audio: true,
        video: true
      }, urac.gotAccess, function(e) {
        console.error("media error", e);
        return true;
      });
      return true;
    },
    gotAccess: function(stream) {
      urac.start.onclick = function() {
        next();
        urac.video.start(1000);
        urac.audio.start(1000);
        this.disabled = true;
        urac.stop.disabled = false;
        return true;
      };
      urac.stop.onclick = function() {
        this.disabled = true;
        urac.start.disabled = false;
        urac.video.stop();
        urac.audio.stop();
        return true;
      };
      urac.player = document.createElement("video");
      urac.player = mergeProps(urac.player, {
        controls: true,
        width: urac.width,
        height: urac.height,
        src: URL.createObjectURL(stream)
      });
      urac.player.play();
      urac.container.appendChild(urac.player);
      urac.video = new MediaStreamRecorder(stream);
      urac.video.mimeType = "video/webm";
      urac.video.videoWidth = urac.width;
      urac.video.videoHeight = urac.height;
      urac.audio = new MediaStreamRecorder(stream);
      urac.audio.mimeType = 'audio/ogg';
      return true;
    }
  };

  run = function(index) {
    return (function(idx) {
      var chunk, recorded, uploaded;
      recorded = {
        ogg: false,
        webm: false
      };
      uploaded = {
        ogg: false,
        webm: false
      };
      chunk = (function(_this) {
        return function(format, blob) {
          var url, xhr;
          recorded[format] = true;
          console.log('data', format, idx);
          if (recorded.ogg && recorded.webm) {
            next();
          }
          url = "/urac/" + idx + "." + format;
          xhr = new XMLHttpRequest();
          xhr.open("PUT", url, true);
          xhr.onreadystatechange = function() {
            if (xhr.readyState === 4 && xhr.status === 200) {
              console.log('upld', format, idx);
              uploaded[format] = true;
              if (uploaded.ogg && uploaded.webm) {
                return $.get("/urac?action=commit&idx=" + idx).success(function(e) {
                  return console.log("Done ", idx);
                });
              }
            }
          };
          xhr.send(blob);
          return true;
        };
      })(this);
      urac.audio.ondataavailable = function(blob) {
        return chunk("ogg", blob);
      };
      urac.video.ondataavailable = function(blob) {
        return chunk("webm", blob);
      };
      return true;
    })(index);
  };

  next = function() {
    ++urac.counter;
    console.log('run', urac.counter);
    return run(urac.counter);
  };

  $(urac.init);

}).call(this);
