#!/bin/sh

_copyright(){ echo "
  uht lightweight webserver
  2014 - anx @ ulzq de (Sebastian Glaser)
  Licensed under GNU GPL v3"; }
_license(){ echo "
  uht is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2, or (at your option)
  any later version.

  uht is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this software; see the file LICENSE.md.  If not, write to
  the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
  Boston, MA 02111-1307 USA

  http://www.gnu.org/licenses/gpl.html"; }

UHT_PLUG="$OZH/uht/plugin"
UHT_VERSION="0.0.2"

urldecode(){ # http://hg.cat-v.org/werc/bin/contrib/ulrdecode.awk
busybox awk '
  BEGIN { hextab ["0"] = 0; hextab ["8"] = 8; hextab ["1"] = 1; hextab ["9"] = 9; hextab ["2"] = 2; hextab ["A"] = hextab ["a"] = 10; hextab ["3"] = 3; hextab ["B"] = hextab ["b"] = 11; hextab ["4"] = 4; hextab ["C"] = hextab ["c"] = 12; hextab ["5"] = 5; hextab ["D"] = hextab ["d"] = 13; hextab ["6"] = 6; hextab ["E"] = hextab ["e"] = 14; hextab ["7"] = 7; hextab ["F"] = hextab ["f"] = 15; }
  { decoded = ""; i = 1; len = length ($0);
    while ( i <= len ) {
      c = substr ($0, i, 1)
      if ( c == "%" ) {
        if ( i+2 <= len ) {
          c1 = substr ($0, i+1, 1)
          c2 = substr ($0, i+2, 1)
          if ( hextab [c1] == "" || hextab [c2] == "" ) {
            print "WARNING: invalid hex encoding: %" c1 c2 | "cat >&2"
          } else {
            code = 0 + hextab [c1] * 16 + hextab [c2] + 0
            c = sprintf ("%c", code)
            i = i + 2 }
        } else { print "WARNING: invalid % encoding: " substr ($0, i, len - i) }
      } else if ( c == "+" ) { c = " " }
      decoded = decoded c; ++i }
    print decoded }'; }

_uhtc_log(){ echo $@ > /tmp/uht.$$; notify-send uht "$@" >/dev/null 2>&1; }
_uhtc_plugin(){ _uhtc_p $@; }; _uhtc_p(){
  local p="$UHT_PLUG"; mkdir -p "$p" "$p.available"
  local cmd="$1"; shift || return 42
  case "$cmd" in
    "ls"|"list")      printf "$bgreen$white$bold Active: %s $R $byellow$white$bold Available: %s $R\n" "$(ls "$p")" "$(ls "$p.available")";;
    "a"|"activate")   ln -s "$p.available/$1" "$p/";;
    "d"|"deactivate") rm "$p/$1";;
    "i"|"install")    OZH="$p.available" oz install "$1";;
  esac; }

uht(){
  is_set "_uhtc_$1" && { local cmd="$1"; shift; "_uhtc_$cmd" $@; return $?; }
  local p="$OZH/uht/handler"
  local ip="0.0.0.0"
  local port=9999
  while echo "@$1" | busybox grep -q "^@-"; do
    case "$1" in
      "-d") p="$2";    shift 2;;
      "-l") ip="$2";   shift 2;;
      "-p") port="$2"; shift 2;;
  esac; done
  uht log "listening at $ip:$port"
  printf "$bred uht $R 2014 anx - listening at $bblue $ip $R:$byellow$black $port $R\n"
  busybox chmod 755 "$p"
  if [ -z "$UHT_PIDFILE" ]; then UHT_ROOT="$(pwd)" busybox nc -ll "$ip:$port" -e "$p"
  else UHT_ROOT="$(pwd)" busybox nc -ll "$ip:$port" -e "$p" & echo $? >"$UHT_PIDFILE"; fi; }

[ -n "$OZH_INSTALL" ] && _install_uht(){
  _install_asset handler
  _install_asset mimetypes.txt
  local p="$UHT_PLUG"; mkdir -p "$p" "$p.available"
  OZH="$p.available" oz install +prefix "$(oz get uht/repo)/plugin" deadbeef/deadbeef fricons/fricons; }

true